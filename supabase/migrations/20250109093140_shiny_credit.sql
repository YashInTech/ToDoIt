/*
  # Create todos table with authentication

  1. New Tables
    - `todos`
      - `id` (bigint, primary key)
      - `created_at` (timestamp with time zone)
      - `user_id` (uuid, references auth.users)
      - `text` (text)
      - `completed` (boolean)
      - `due_date` (timestamp with time zone)
      - `priority` (text)
      - `category` (text)

  2. Security
    - Enable RLS on `todos` table
    - Add policies for authenticated users to:
      - Read their own todos
      - Create new todos
      - Update their own todos
      - Delete their own todos
*/

CREATE TABLE todos (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
  user_id uuid REFERENCES auth.users NOT NULL,
  text text NOT NULL,
  completed boolean DEFAULT false,
  due_date timestamp with time zone,
  priority text DEFAULT 'medium'::text,
  category text DEFAULT 'personal'::text
);

ALTER TABLE todos ENABLE ROW LEVEL SECURITY;

-- Policy to allow users to read their own todos
CREATE POLICY "Users can read own todos"
  ON todos
  FOR SELECT
  TO authenticated
  USING (auth.uid() = user_id);

-- Policy to allow users to create their own todos
CREATE POLICY "Users can create todos"
  ON todos
  FOR INSERT
  TO authenticated
  WITH CHECK (auth.uid() = user_id);

-- Policy to allow users to update their own todos
CREATE POLICY "Users can update own todos"
  ON todos
  FOR UPDATE
  TO authenticated
  USING (auth.uid() = user_id)
  WITH CHECK (auth.uid() = user_id);

-- Policy to allow users to delete their own todos
CREATE POLICY "Users can delete own todos"
  ON todos
  FOR DELETE
  TO authenticated
  USING (auth.uid() = user_id);